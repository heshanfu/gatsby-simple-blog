{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/PostAbbrev.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_Bio__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_SEO__WEBPACK_IMPORTED_MODULE_4__","_components_PostAbbrev__WEBPACK_IMPORTED_MODULE_5__","BlogIndex","_ref","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","a","createElement","keywords","lang","totalCount","map","_ref2","node","frontmatter","fields","slug","key","date","timeToRead","excerpt","description","tags","propTypes","PropTypes","object","isRequired","gatsby__WEBPACK_IMPORTED_MODULE_2__","_utils_typography__WEBPACK_IMPORTED_MODULE_3__","_utils_helpers__WEBPACK_IMPORTED_MODULE_4__","_TagList__WEBPACK_IMPORTED_MODULE_5__","PostAbbrev","excerptPart","tagsPart","dangerouslySetInnerHTML","__html","style","margin","baseUrl","fontFamily","fontSize","rhythm","marginBottom","boxShadow","to","rel","formatReadingTime","string","number","array","defaultProps"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KASA,SAASc,EAATC,GAAuC,IAAlBC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACElB,EAAAmB,EAAAC,cAACf,EAAA,EAAD,CAAQM,SAAUA,EAAUI,MAAOH,GACjCZ,EAAAmB,EAAAC,cAACd,EAAA,EAAD,CAAKS,MAAM,YAAYM,SAAU,uCAA2CC,KAAK,QACjFtB,EAAAmB,EAAAC,cAAA,aACEpB,EAAAmB,EAAAC,cAAChB,EAAA,EAAD,OAEFJ,EAAAmB,EAAAC,cAAA,UAAKV,EAAKO,kBAAkBM,WAA5B,UACCP,EAAMQ,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KACpD,OACE7B,EAAAmB,EAAAC,cAACb,EAAA,EAAD,CACEuB,IAAKJ,EAAKE,OAAOC,KACjBA,KAAMH,EAAKE,OAAOC,KAClBE,KAAML,EAAKC,YAAYI,KACvBC,WAAYN,EAAKM,WACjBjB,MAAOA,EACPkB,QAASP,EAAKC,YAAYO,aAAeR,EAAKO,QAC9CE,KAAMT,EAAKC,YAAYQ,UAQnC3B,EAAU4B,UAAY,CACpB1B,KAAM2B,IAAUC,OAAOC,WACvB5B,SAAU0B,IAAUC,OAAOC,YAGd/B,YAER,IAAMV,EAAS,+CC7CtB,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAsC,EAAA9C,EAAA,KAAA+C,EAAA/C,EAAA,KAAAgD,EAAAhD,EAAA,KAAAiD,EAAAjD,EAAA,KAUA,SAASkD,EAATnC,GAAsE,IAChEoC,EAWAC,EAZgBjB,EAAgDpB,EAAhDoB,KAAMd,EAA0CN,EAA1CM,MAAOgB,EAAmCtB,EAAnCsB,KAAMC,EAA6BvB,EAA7BuB,WAAYC,EAAiBxB,EAAjBwB,QAASE,EAAQ1B,EAAR0B,KAmB5D,OAjBIF,IACFY,EACE7C,EAAAmB,EAAAC,cAAA,KACE2B,wBAAyB,CACvBC,OAAQf,MAOZE,IACFW,EACE9C,EAAAmB,EAAAC,cAACuB,EAAA,EAAD,CAASM,MAAO,CAAEC,OAAQ,4BAA8Bf,KAAMA,EAAMgB,QAAQ,WAK9EnD,EAAAmB,EAAAC,cAAA,eACEpB,EAAAmB,EAAAC,cAAA,cACEpB,EAAAmB,EAAAC,cAAA,MACE6B,MAAO,CACLG,WAAY,yBACZC,SAAUC,YAAO,GACjBC,aAAcD,YAAO,OAGvBtD,EAAAmB,EAAAC,cAACoB,EAAA,EAAD,CAAMS,MAAO,CAAEO,UAAW,QAAUC,GAAI5B,EAAM6B,IAAI,YAC/C3C,IAGJ+B,EACD9C,EAAAmB,EAAAC,cAAA,aAAWW,EAAX,MAAqB4B,YAAkB3B,IACtCa,IAMTD,EAAWR,UAAY,CACrBP,KAAMQ,IAAUuB,OAAOrB,WACvBxB,MAAOsB,IAAUuB,OACjB7B,KAAMM,IAAUuB,OAAOrB,WACvBP,WAAYK,IAAUwB,OAAOtB,WAC7BN,QAASI,IAAUuB,OACnBzB,KAAME,IAAUyB,OAGlBlB,EAAWmB,aAAe,CACxBhD,MAAO,KACPkB,QAAS,KACTE,KAAM,MAGOS","file":"component---src-pages-index-js-e7f99b5fbe975ff609aa.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PostAbbrev from '../components/PostAbbrev';\n\nfunction BlogIndex({ data, location }) {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} lang=\"chs\" />\n      <aside>\n        <Bio />\n      </aside>\n      <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        return (\n          <PostAbbrev\n            key={node.fields.slug}\n            slug={node.fields.slug}\n            date={node.frontmatter.date}\n            timeToRead={node.timeToRead}\n            title={title}\n            excerpt={node.frontmatter.description || node.excerpt}\n            tags={node.frontmatter.tags}\n          />\n        );\n      })}\n    </Layout>\n  );\n}\n\nBlogIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'gatsby';\n\nimport { rhythm } from '../utils/typography';\nimport { formatReadingTime } from '../utils/helpers';\n\nimport TagList from './TagList';\n\nfunction PostAbbrev({ slug, title, date, timeToRead, excerpt, tags }) {\n  let excerptPart;\n  if (excerpt) {\n    excerptPart = (\n      <p\n        dangerouslySetInnerHTML={{\n          __html: excerpt,\n        }}\n      />\n    );\n  }\n\n  let tagsPart;\n  if (tags) {\n    tagsPart = (\n      <TagList style={{ margin: '0.5rem 0 -0.5rem -0.5rem' }} tags={tags} baseUrl=\"/tags\" />\n    );\n  }\n\n  return (\n    <article>\n      <header>\n        <h3\n          style={{\n            fontFamily: 'Montserrat, sans-serif',\n            fontSize: rhythm(1),\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          <Link style={{ boxShadow: 'none' }} to={slug} rel=\"bookmark\">\n            {title}\n          </Link>\n        </h3>\n        {tagsPart}\n        <small>{`${date} â€¢ ${formatReadingTime(timeToRead)}`}</small>\n        {excerptPart}\n      </header>\n    </article>\n  );\n}\n\nPostAbbrev.propTypes = {\n  slug: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  excerpt: PropTypes.string,\n  tags: PropTypes.array,\n};\n\nPostAbbrev.defaultProps = {\n  title: null,\n  excerpt: null,\n  tags: null,\n};\n\nexport default PostAbbrev;\n"],"sourceRoot":""}